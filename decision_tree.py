# -*- coding: utf-8 -*-
"""decision tree.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11spS61prRKmu0ssP63uAhMdy-x04C86z
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix
data = pd.read_csv("/content/Multiclass Diabetes Dataset.csv")

data.head()

data.info()

data.describe()

data.isnull().sum()

from sklearn.preprocessing import LabelEncoder

le = LabelEncoder()
data['Class']=le.fit_transform(data['Class'])

from sklearn.model_selection import train_test_split
X = data.drop('Class', axis=1)
y = data['Class']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

from sklearn.tree import DecisionTreeClassifier

model = DecisionTreeClassifier()
model.fit(X_train, y_train)

!pip install skl2onnx onnx

from skl2onnx import convert_sklearn
from skl2onnx.common.data_types import FloatTensorType

initial_type = [('float_input', FloatTensorType([None, X_train.shape[1]]))]

onnx_model = convert_sklearn(model, initial_types=initial_type)

with open('decision_tree_model.onnx', 'wb') as f:
    f.write(onnx_model.SerializeToString())

y_pred = model.predict(X_test)

from sklearn.metrics import accuracy_score, classification_report,confusion_matrix

accuracy = accuracy_score(y_test, y_pred)
print("Accuracy:", accuracy)
print("Classification Report:\n", classification_report(y_test, y_pred))
print("Confusion Matrix:\n", confusion_matrix(y_test, y_pred))

!pip install skl2onnx onnxruntime

"""The error `ModuleNotFoundError: No module named 'skl2onnx'` indicates that the necessary library to convert scikit-learn models to ONNX format is not installed in your environment. The code above installs the `skl2onnx` library and also `onnxruntime`, which is often used to run ONNX models."""