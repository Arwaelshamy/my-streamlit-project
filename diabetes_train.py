# -*- coding: utf-8 -*-
"""diabetes_train.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1juFjkTxWCGEFprUussbAglYJ5jK3KXgj
"""

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LogisticRegression
from sklearn.pipeline import Pipeline
from skl2onnx import convert_sklearn
from skl2onnx.common.data_types import FloatTensorType

!pip install scikit-learn onnx skl2onnx pandas numpy

url = "https://raw.githubusercontent.com/jbrownlee/Datasets/master/pima-indians-diabetes.data.csv"

columns = ["Pregnancies", "Glucose", "BloodPressure", "SkinThickness",
           "Insulin", "BMI", "DiabetesPedigreeFunction", "Age", "Outcome"]

df = pd.read_csv(url, names=columns)

# تقسيم البيانات
X = df.drop("Outcome", axis=1)
y = df["Outcome"]

X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=0.2, stratify=y, random_state=42
)

# إنشاء Pipeline مع L1-Regularized Logistic Regression
pipe = Pipeline([
    ('scaler', StandardScaler()),
    ('model', LogisticRegression(penalty='l1', solver='liblinear', max_iter=1000))
])

# تدريب الموديل
pipe.fit(X_train, y_train)

# تحويل الموديل لـ ONNX
initial_type = [('float_input', FloatTensorType([None, X.shape[1]]))]
onnx_model = convert_sklearn(pipe, initial_types=initial_type)

# حفظ الموديل
with open("diabetes_model.onnx", "wb") as f:
    f.write(onnx_model.SerializeToString())

print("✅ تم تدريب الموديل وحفظه كـ diabetes_model.onnx في /content")